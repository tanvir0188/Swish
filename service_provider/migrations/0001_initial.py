# Generated by Django 5.2.4 on 2025-08-05 08:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100, unique=True)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='uploads/company_logos')),
                ('wallpaper', models.ImageField(blank=True, null=True, upload_to='uploads/company_wallpapers')),
                ('about', models.TextField(blank=True, null=True)),
                ('ice_number', models.CharField(max_length=255, unique=True)),
                ('business_email', models.CharField(max_length=255, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('monday_time', models.DateTimeField(blank=True, null=True)),
                ('tuesday_time', models.DateTimeField(blank=True, null=True)),
                ('wednesday_time', models.DateTimeField(blank=True, null=True)),
                ('thursday_time', models.DateTimeField(blank=True, null=True)),
                ('friday_time', models.DateTimeField(blank=True, null=True)),
                ('saturday_time', models.DateTimeField(blank=True, null=True)),
                ('sunday_time', models.DateTimeField(blank=True, null=True)),
                ('homepage', models.URLField(blank=True)),
                ('facebook', models.URLField(blank=True)),
                ('instagram', models.URLField(blank=True)),
                ('youtube', models.URLField(blank=True)),
                ('tiktok', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('open_in_weekend', models.BooleanField(default=False)),
                ('area', models.ManyToManyField(blank=True, to='jobs.area')),
                ('sub_category', models.ManyToManyField(blank=True, to='jobs.subcategory')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('designation', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads/employee_images')),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service_provider.companyprofile')),
            ],
            options={
                'verbose_name_plural': 'Employees',
                'ordering': ['designation'],
            },
        ),
        migrations.CreateModel(
            name='TokenPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_paid', models.BooleanField(default=True)),
                ('package_name', models.CharField(choices=[('Starter', 'Starter'), ('Growth', 'Growth'), ('Pro', 'Pro'), ('Elite', 'Elite')])),
                ('package_balance', models.PositiveIntegerField()),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('time_estimate', models.CharField(max_length=100)),
                ('proposal_description', models.TextField(max_length=500)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Complete', 'Complete'), ('Rejected', 'Rejected')], default='Active', max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bidding_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.job')),
            ],
            options={
                'unique_together': {('job', 'bidding_company')},
            },
        ),
        migrations.CreateModel(
            name='TokenTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='jobs.job')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service_provider.tokenpackage')),
                ('used_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('job', 'used_by')},
            },
        ),
    ]
